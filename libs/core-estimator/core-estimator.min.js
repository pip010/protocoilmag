/*! @source https://github.com/oftn/core-estimator/blob/master/core-estimator.js */
"use strict";(function(){function r(a){var c=a.length;if(!c)return null;for(var b=1/0,f=-1/0,g=0,j=0,l=0;l<c;l++){var e=a[l];e<b&&(b=e);e>f&&(f=e);g+=e;j+=Math.pow(e,2)}a=g/c;b=Math.pow(a,2);f=0;1<c&&(f=(j-c*b)/(c-1));return{size:c,mean:a,uvariance:f}}var g=self.performance||Date;g.now||(g.webkitNow?g.now=g.webkitNow:g=Date);var m;a:{var p;m=function(g,c){p=c};try{0()}catch(h){"fileName"in h?p=h.fileName:"stacktrace"in h?h.stacktrace.replace(/called from line \d+, column \d+ in (.*):/gm,m):"stack"in h&&h.stack.replace(/at.*?\(?(\S+):\d+:\d+\)?$/g,
m);if(!p)throw Error("Your browser does not currently support Core Estimator.");m=p;break a}m=void 0}var v=m.replace(/\/[^\/]+$/,"/workload.js"),s=!!navigator.cores,t=!1;s||(navigator.cores=1);navigator.getCores=function(a,c){c=c||{};"use_cache"in c||(c.use_cache=!0);if(s||c.use_cache&&t)a(navigator.cores);else{var b=[],f,m=[],j=function(n,c){for(var u=5,e=[],d=b.length;d<n;d++)b.push(new Worker(v));(function x(){for(var d,h=n,a=0;a<n;a++)b[a].onmessage=function(){h--;if(!h)if(u--,e.push(g.now()-
d),u)x();else if(1===n)Array.prototype.push.apply(m,e),f=r(m),c(!0);else{var a=r(e),b=a.uvariance/a.size,j=f.uvariance/f.size,l=(a.mean-f.mean)/Math.sqrt(b+j),k=Math.pow(b+j,2)/(Math.pow(a.uvariance,2)/(Math.pow(a.size,2)*(a.size-1))+Math.pow(f.uvariance,2)/(Math.pow(f.size,2)*(f.size-1))),b=Object.keys(q),a=b.reduce(function(a,b){return k<b?a:b}),b=b.reduce(function(a,b){return k>b?a:b});c(l<q[a]+(q[b]-q[a])*((k-a)/(b-a)))}};for(a=0;a<n;a++)b[a].postMessage(null);d=g.now()})()},l=function(c){for(var d=
0,e=b.length;d<e;d++)b[d].terminate();navigator.cores=c;t=!0;a(c)},e=c.progress,h=function(a,b){e&&e(d,k,a);j(1,function(){j(a,function(c){c?(d=a,a+=b):(k=a,a-=b);if(1===k-d)return l(d);if(!b)return l(k-1);h(a,b>>1)})})},d=1,k=1/0;(function w(a){e&&e(d,k,a);j(1,function(){j(a,function(b){if(b)d=a,w(2*a);else{k=a;if(1===d)return l(d);h(3*d/2,d/4)}})})})(2)}};var q={1:63.66,2:9.925,3:5.841,4:4.604,5:4.032,6:3.707,7:3.499,8:3.355,9:3.25,10:3.169,11:3.106,12:3.055,13:3.012,14:2.977,15:2.947,16:2.921,
17:2.898,18:2.878,19:2.861,20:2.845,21:2.831,22:2.819,23:2.807,24:2.797,25:2.787,26:2.779,27:2.771,28:2.763,29:2.756,30:2.75,32:2.738,34:2.728,36:2.719,38:2.712,40:2.704,42:2.698,44:2.692,46:2.687,48:2.682,50:2.678,55:2.668,60:2.66,65:2.654,70:2.648,80:2.639,100:2.626,150:2.609,200:2.601}})();
